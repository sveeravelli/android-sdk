
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}
apply plugin: 'com.android.application'

task copyJars(type:Copy) {
    from ('../Jar')
      include "*.jar"
      into new File('libs')
}

task copyReleaseLibs (type:Copy) {
    from(new File(projectDir,'../Libs/release'))
      include "**/*.so"
      into new File(projectDir,'libs')
}

task copyDebugLibs (type:Copy) {
    from("../Libs/debug")
      include "**/*.so"
      into 'libs'
}

task copyReleaseVoAbout << {
        copy {
            from(new File(projectDir,'../Libs/release/libversions.txt'))
              into new File(projectDir,'assets')
        }
}

task copyDebugVoAbout << {
        copy {
            from(new File(projectDir,'../Libs/debug/libversions.txt'))
              into new File(projectDir,'assets')
        }
}

task clearLibs (type: Delete) {
    delete "libs"
}

project.afterEvaluate {
  mergeDebugAssets.dependsOn project.tasks.getByName('copyDebugVoAbout')
  mergeReleaseAssets.dependsOn project.tasks.getByName('copyReleaseVoAbout')
}

assembleDebug.dependsOn copyDebugLibs
assembleRelease.dependsOn copyReleaseLibs
preBuild.dependsOn copyJars
clean.dependsOn clearLibs


dependencies {
    compile fileTree(dir: '../Jar', include: '*.jar')
    compile fileTree(dir: 'libs', include: '*.jar')
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"


    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}
