How to integrate your app with VisualOn's SecurePlayer for Playready playback

SecurePlayerSampleApp is an example of this integration for Android Studio.

  -- Android Studio --




1. Copy all of the zip/libs/*.jar files into the project/app/libs/ folder.
2. Copy all of the zip/libs/armeabi-v7a/*.so files into the project/app/src/main/jniLibs/armeabi-v7a/ folder.
2. Copy all of the zip/libs/x86/*.so files into the project/app/src/main/jniLibs/x86/ folder.
3. Copy all of the the zip/assets/* files into the project/app/src/main/assets/ folder.
4. Ensure your OoyalaSDK.jar file is up to date in project/app/libs.
5. Make sure the following permissions are enabled in your application:

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />

6. In your application, set the following STATIC property before calling setEmbedCode:

    OoyalaPlayer.enableCustomPlayreadyPlayer = true;
    OoyalaPlayer.enableCustomHLSPlayer = true;

7. Add a "compile files()" line for each of the jars in your project/app/libs/ folder.  for example:
  compile files('libs/DxDrmDlc.jar')
  compile files('libs/assets.jar')
  compile files('libs/voOSBasePlayer.jar')
  compile files('libs/voOSDataSource.jar')
  compile files('libs/voOSEngine.jar')
  compile files('libs/voOSHDMICheck.jar')
  compile files('libs/voOSPlayer.jar')
  compile files('libs/voOSStreamingDownloader.jar')
  compile files('libs/voOSUtils.jar')

8. play an embed code that has smooth or hls playback capablities (or a remote asset pointing at a manifest)

