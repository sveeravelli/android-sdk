How to integrate your app with VisualOn's SecurePlayer for Playready playback

SecurePlayerSampleApp is an example of this integration for Android Studio.

  -- Android Studio --

1. Copy all of the zip/libs/*.jar files into the project/app/libs/ folder.
2. Copy all of the zip/libs/armeabi/*.so files into the project/app/src/main/jniLibs/armeabi/ folder.
3. Copy all of the the zip/assets/* files into the project/app/src/main/assets/ folder.
4. Ensure your OoyalaSDK.jar file is up to date in project/app/libs.
5. Make sure the following permissions are enabled in your application:

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />

6. In your application, set the following STATIC property before calling setEmbedCode:

    OoyalaPlayer.enableCustomPlayreadyPlayer = true;
    OoyalaPlayer.enableCustomHLSPlayer = true;

7. play an embed code that has smooth or hls playback capablities (or a remote asset pointing at a manifest)

  -- Eclipse --

1. Copy all of the zip/libs/*.jar files into the project/libs/ folder.
2. Copy all of the zip/libs/armeabi/*.so files into the project/libs/armeabi/ folder.
3. Copy all of the the zip/assets/* files into the project/assets/ folder.
4. Ensure your OoyalaSDK.jar file is up to date in your project
5. Make sure the following permissions are enabled in your application:

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />

6. In your application, set the following STATIC property before calling setEmbedCode:

    OoyalaPlayer.enableCustomPlayreadyPlayer = true;
    OoyalaPlayer.enableCustomHLSPlayer = true;

7. play an embed code that has smooth or hls playback capablities (or a remote asset pointing at a manifest)


=== How to deal with Error codes ===
When an error happens with DRM management, the OoyalaPlayer will be put into a State.ERROR state.  From here, the applicaton must retrieve the player.getError() object.  This object will be an OoyalaException.  the e.getCode() value will be an OoyalaErrorCode, which now has the following new DRM-related error codes (with added comments for this description):

    /** DRM Personalization/Device Identification failed */
    ERROR_DRM_PERSONALIZATION_FAILED, //The client has no way to respond
    /** DRM File download failed */
    ERROR_DRM_FILE_DOWNLOAD_FAILED,  //Network might be dead, try again or check the file exists
    /** Device check found invalid auth token */
    ERROR_DEVICE_INVALID_AUTH_TOKEN, //Auth token was invalid, which means device management didn't work properly.  
    /** Device binding failed */
    ERROR_DEVICE_BINDING_FAILED, 
    /** Device id is too long */
    ERROR_DEVICE_ID_TOO_LONG,
    /** Device limit has been reached */
    ERROR_DEVICE_LIMIT_REACHED,
    /** DRM Rights Acquisition server error */
    ERROR_DRM_RIGHTS_SERVER_ERROR,  //If this happens, you can print the getMessage() to figure out what happened. This will most likely be something unactionable. 
    /** General non-Ooyala related DRM failure. stack trace of resulting failure is attached */
    ERROR_DRM_GENERAL_FAILURE,  //This will likely be unactionable. 
